{"version":3,"sources":["Components/Form.js","Components/scrollToElement.js","Components/DisplayMuseumsList.js","Components/DisplayMuseumDetails.js","Components/CityInfo.js","assets/logo.svg","Components/DisplayErrorMessage.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleChange","event","onTextInputChange","target","value","handleSubmit","onFormSubmit","bind","onSubmit","this","className","htmlFor","id","type","placeholder","onChange","Component","scrollToElement","elementId","document","getElementById","scrollIntoView","behavior","DisplayMuseumsList","handleClick","e","xid","axios","url","method","responseType","params","apikey","then","response","newMuseumDetails","push","data","onDataUpdate","museumXid","onClick","museumName","setTimeout","style","display","DisplayMuseumDetails","imgDetail","nameDetail","addressDetail","urlDetail","infoDetail","house_number","road","city","state","postcode","country","src","alt","href","CityInfo","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref","svgRef","title","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","DisplayErrorMessage","querySelector","updateErrorState","App","preventDefault","name","userInput","longitude","lon","latitude","lat","newCityInfo","setState","cityInfo","updateMuseumsData","catch","error","hasError","radius","kinds","rate","format","limit","newMuseumsData","forEach","obj","museumsData","isDesktop","setContainerHeight","heightValue","handleWindowResize","window","innerWidth","updateHasError","museumDetails","updateMuseumDetails","newData","addEventListener","screenWidth","removeEventListener","map","preview","address","wikipedia_extracts","text","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5772cf1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.props.onTextInputChange(event.target.value);\n  } \n\n  handleSubmit = (event) => {\n    this.props.onFormSubmit(event);\n  } \n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className='wrapper'> \n        <label className='visuallyHidden' htmlFor='city'>Enter a city</label>\n        <input id='city' value={this.props.value} type='text' placeholder='Enter City' onChange={this.handleChange} />\n\n        <label className='visuallyHidden' htmlFor='submit'>Search</label>\n        <input id='submit' type='submit' value='Search' />\n\n        <p>Enter a city to search for museums.</p>\n      </form>\n    )\n  }\n}\n\nexport default Form;","// function for scrolling to sections of the page \nconst scrollToElement = (elementId) => {\n  document.getElementById(elementId)\n  .scrollIntoView({behavior: 'smooth'});\n}\n\nexport default scrollToElement;","import React, { Component } from 'react';\nimport scrollToElement from './scrollToElement';\nimport axios from 'axios';\n\nclass DisplayMuseumsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // on click of the list's button\n  handleClick = e => {\n    // grab the value (xid props) of the clicked button\n    const xid = e.target.value;\n    const key = '5ae2e3f221c38a28845f05b6c25ce5d3be16ef238b3cedc588767b71';\n    // use the xid in the API endpoint to get details of the clicked museum\n    axios({\n      url: `https://api.opentripmap.com/0.1/en/places/xid/${xid}`,\n      method: 'GET',\n      responseType: 'JSON',\n      params: {\n        apikey: key,\n      }\n    }).then(response => {\n      const newMuseumDetails = [];\n      // push the API data to the newMuseumDetails array\n      newMuseumDetails.push(response.data);\n      // update the museumDetails state in the App.js with newMuseumsDetails array\n      this.props.onDataUpdate(newMuseumDetails);\n      // scroll to #detailsContainer after getting a response from the API\n      scrollToElement('detailsContainer');\n    })\n  }\n\n  render () {\n    return (\n      <li>\n        <span><i className='fas fa-landmark'></i></span><button type='button' value={this.props.museumXid} onClick={this.handleClick}>{this.props.museumName}</button>\n      </li>\n    )\n  }\n}\n\nexport default DisplayMuseumsList;","import React from 'react';\nimport scrollToElement from './scrollToElement';\n\n// function to display the .museumDetails section on the page\nconst DisplayMuseumDetails = ({imgDetail, nameDetail, addressDetail, urlDetail, infoDetail}) => {\n\n  const {house_number, road, city, state, postcode, country} = addressDetail;\n\n  return (\n    <section className='museumDetails' id='detailsContainer'>\n      <div className='wrapper museumContainer'>\n        <div className='museumImg'>\n          <img src={imgDetail} alt={nameDetail}/>\n        </div>\n        <div className='museumInfo'>\n          <h2>{nameDetail}</h2>\n          <address>{house_number} {road}, {city}, {state}, {postcode} {country}</address>\n          <a href={urlDetail}>Visit {nameDetail}'s website</a>\n          <p>{infoDetail}\n          </p>\n          <button onClick={handleClick} type='button'>Go back to list</button>\n        </div>\n      </div>\n    </section>\n  )\n}\n\n// on click of the 'Go back to list' button\nconst handleClick = () => {\n  // scroll back to the museums list\n  scrollToElement('listContainer');\n  // hide the museum details after a second\n  setTimeout(() => {\n    document.getElementById('detailsContainer').style.display = 'none';\n  }, 1000);\n}\n\nexport default DisplayMuseumDetails;","import React, { Component } from 'react';\n\nclass CityInfo extends Component {\n  constructor (props) {\n    super (props);\n  }\n  \n  render () {\n    return (\n      <div className='cityInfo'>\n        <p>Museums in</p>\n        <h2>{this.props.city}, {this.props.country}</h2>\n      </div>\n    )\n  }\n}\n\nexport default CityInfo;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m42.933 1.219c-1.551 1.55-19.933 19.619-19.933 19.619s-18.382-18.069-19.933-19.619c-2.742-2.742-3.067 0-3.067 0v41h23 23v-41c0 0-.325-2.742-3.067 0z\",\n  fill: \"#b0b0b0\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 46 42.219\",\n    height: 16.55,\n    viewBox: \"0 0 46 42.219\",\n    width: 46,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.f301e47d.svg\";\nexport { ForwardRef as ReactComponent };","import React, {Component} from 'react';\n\nclass DisplayErrorMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // on click of the \"Close window\" button\n  handleClick = () => {\n    // hide the error message\n    document.querySelector('.errorMessage')\n    .style.display = 'none';\n    // update hasError state to false\n    this.props.updateErrorState(false);\n  }\n\n  render () {\n    return (\n      <div className='errorMessage'>\n        <p>Something went wrong.</p>\n        <p>Please try again.</p>\n        <button type='button' onClick={this.handleClick}>Close window</button>\n      </div>\n    );\n  }\n}\n\nexport default DisplayErrorMessage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './Components/Form';\nimport DisplayMuseumsList from './Components/DisplayMuseumsList';\nimport DisplayMuseumDetails from './Components/DisplayMuseumDetails';\nimport CityInfo from './Components/CityInfo';\nimport { ReactComponent as Logo } from './assets/logo.svg';\nimport scrollToElement from './Components/scrollToElement';\nimport DisplayErrorMessage from './Components/DisplayErrorMessage';\n\nclass App extends Component {\n  constructor () {\n    super();\n\n    this.state = {\n      userInput: '',\n      cityInfo: [],\n      museumsData: [],\n      museumDetails: [],\n      isDesktop: false,\n      hasError: false,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateMuseumDetails = this.updateMuseumDetails.bind(this);\n    this.updateHasError = this.updateHasError.bind(this);\n  }\n\n  // tracks user's form input\n  handleChange(event) {\n    this.setState({\n      userInput: event,\n    })\n  }\n\n  // on form submit\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const key = '5ae2e3f221c38a28845f05b6c25ce5d3be16ef238b3cedc588767b71';\n    // make an API request to grab the latitude and longitude of the user inputted city\n    axios({\n      url: 'https://api.opentripmap.com/0.1/en/places/geoname',\n      method: 'GET',\n      responseType: 'JSON',\n      params: {\n        name: this.state.userInput,\n        apikey: key,\n      }\n    }).then( response => {\n        const longitude = response.data.lon;\n        const latitude = response.data.lat;\n        const newCityInfo = [];\n        // push the city and country name API data to the newCityInfo array\n        newCityInfo.push(response.data.name, response.data.country);\n        // update the cityInfo state to newCityInfo array\n        this.setState({\n          cityInfo: newCityInfo,\n        });\n        // make a second API call with the longitude and latitude data from the first API request\n        this.updateMuseumsData(longitude, latitude, key);\n    }).catch(error => {\n      // if error exists update hasError state to true\n        if (error) {\n          this.setState({\n            hasError: true,\n          });\n        }\n      });\n    // empty form input after submit\n    this.setState({\n      userInput: '',\n    });\n  }\n\n  // function for the second API request\n  updateMuseumsData = (lon, lat, key) => {\n    axios({\n      url: 'https://api.opentripmap.com/0.1/en/places/radius',\n      method: 'GET',\n      responseType: 'JSON',\n      params: {\n        radius: 100000,\n        lon: lon,\n        lat: lat,\n        kinds: 'museums',\n        rate: '3',\n        format: 'json',\n        limit: 10,\n        apikey: key,\n      }\n    }).then( (response) => {\n        const newMuseumsData = [];\n        // push each data for the museums in the newMuseumsData array\n        response.data.forEach( obj => {\n          newMuseumsData.push(obj);\n        });\n        // update the museumsData state to newMuseumsData array\n        this.setState({\n          museumsData: newMuseumsData,\n        });   \n        // if device is desktop\n        if (this.state.isDesktop) {\n          // set the height of the .museumsList section to 100vh\n          this.setContainerHeight('100vh');\n        } else {\n          this.setContainerHeight('initial');\n        }\n        // scroll to #listContainer when museumsData is present\n        if (this.state.museumsData) {\n          scrollToElement('listContainer');\n        }\n    }).catch( error => {\n        // if error exists update hasError state to true\n        if (error) {\n          this.setState({\n            hasError: true,\n          });\n        }\n    });\n  }\n\n  // passed to the DisplayMuseumsList component to update the museumDetails state\n  updateMuseumDetails(newData) {\n    this.setState({\n      museumDetails: newData,\n    });\n  }\n\n  // function to set the #listContainer's height\n  setContainerHeight = (heightValue) => {\n    document.getElementById('listContainer').style.height = heightValue;\n  }\n\n  // function to execute when window is resized\n  handleWindowResize = () => {\n    // sets isDesktop state to true if screen size is >= 940px\n    this.setState({\n      isDesktop: window.innerWidth >= 940,\n    });\n    // if device is desktop and API request has no error\n    if (this.state.isDesktop && !this.state.hasError) {\n      // set the height of the .museumsList section to 100vh\n      this.setContainerHeight('100vh');\n    } else {\n      this.setContainerHeight('initial');\n    }\n  }\n\n  componentDidMount() {\n    // add event listener for window resize\n    window.addEventListener('resize', this.handleWindowResize);\n    const screenWidth = window.innerWidth;\n    // sets isDesktop state to true if screen size is >= 940px\n    this.setState({\n      isDesktop: screenWidth >= 940,\n    });\n  }\n\n  componentWillUnmount() {\n    // remove event listener for window resize\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  // function passed as props to DisplayErrorMessage to update the hasError state\n  updateHasError = (value) => {\n    this.setState({\n      hasError: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>Museum <span><Logo className='logo'/>Finder</span></h1>\n        </header>\n        <main>\n          <Form\n            onTextInputChange={this.handleChange} \n            value={this.state.userInput}\n            onFormSubmit={this.handleSubmit}\n          />\n        </main>\n        <section className='museumsList wrapper' id='listContainer'>\n          {\n            // if the museumsData state has data display CityInfo component\n            this.state.museumsData.length > 0\n            ? <CityInfo city={this.state.cityInfo[0]} country={this.state.cityInfo[1]} /> : null\n          }\n          <ul>\n            {\n              // map the museumsData array and pass the object properties to the DisplayMuseumsList component\n              this.state.museumsData.map( obj => {\n                return (\n                  <DisplayMuseumsList \n                    key={obj.xid}\n                    museumName={obj.name} \n                    museumXid={obj.xid}\n                    onDataUpdate={this.updateMuseumDetails}\n                  />\n                )\n              })\n            }\n          </ul>\n        </section>\n        {\n          // map over the museumsDetails array and pass the data to the DisplayMuseumDetails component\n          this.state.museumDetails.map( obj => {\n            return (\n              <DisplayMuseumDetails \n                key={obj.xid}\n                imgDetail={obj.preview.source}\n                nameDetail={obj.name}\n                addressDetail={obj.address}\n                urlDetail={obj.url}\n                infoDetail={obj.wikipedia_extracts.text}\n              />\n            )\n          })\n        }\n        {\n          this.state.hasError\n          ? <DisplayErrorMessage updateErrorState={this.updateHasError} />\n          : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}